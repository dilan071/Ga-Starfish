{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Nereida%20Ramos/Desktop/Ga-Starfish/starfish-app/src/app/retrospective-session/page.tsx"],"sourcesContent":["'use client';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function RetrospectiveSessionPage() {\r\n  const [retrospective, setRetrospective] = useState<any>(null);\r\n  const [actionText, setActionText] = useState('');\r\n  const [hasVoted, setHasVoted] = useState(false);\r\n  const [showQuestions, setShowQuestions] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState<any>(null);\r\n  const [userVotedAction, setUserVotedAction] = useState<string | null>(null);\r\n\r\n  // Función para obtener avatar de un email\r\n  const getAvatar = (email: string) => {\r\n    const all = JSON.parse(localStorage.getItem('users') || '[]');\r\n    const u = all.find((x: any) => x.email === email);\r\n    return u?.avatar || '/default-avatar.png';\r\n  };\r\n\r\n  // Cargar usuario y retrospectiva (incluye programadas que ya estén activas)\r\n  useEffect(() => {\r\n    // 1. Usuario\r\n    const user = JSON.parse(localStorage.getItem('currentUser') || 'null');\r\n    setCurrentUser(user);\r\n\r\n    // 2. Intentar cargar retrospectiva \"normal\"\r\n    let retro: any = null;\r\n    const storedNormal = localStorage.getItem('retrospective');\r\n    if (storedNormal) {\r\n      retro = JSON.parse(storedNormal);\r\n    } else {\r\n      // 3. Si no existe, buscar en programadas ya activas\r\n      const scheduled = JSON.parse(localStorage.getItem('scheduledRetrospectives') || '[]');\r\n      const now = new Date();\r\n      const activeList = scheduled.filter((r: any) => new Date(r.scheduledAt) <= now);\r\n      if (activeList.length > 0) {\r\n        activeList.sort(\r\n          (a: any, b: any) => new Date(b.scheduledAt).getTime() - new Date(a.scheduledAt).getTime()\r\n        );\r\n        retro = activeList[0];\r\n        localStorage.setItem('retrospective', JSON.stringify(retro));\r\n      }\r\n    }\r\n\r\n    if (retro) {\r\n      setRetrospective(retro);\r\n    }\r\n  }, []);\r\n\r\n  // Determinar si el usuario ya votó\r\n  useEffect(() => {\r\n    if (retrospective && currentUser && retrospective.votes) {\r\n      const voteId = retrospective.votes[currentUser.email];\r\n      if (voteId) {\r\n        setHasVoted(true);\r\n        setUserVotedAction(voteId);\r\n      }\r\n    }\r\n  }, [retrospective, currentUser]);\r\n\r\n  // Función para otorgar puntos\r\n  const addPoint = (type: 'vote' | 'comment') => {\r\n    if (!currentUser) return;\r\n    const record = JSON.parse(localStorage.getItem('points') || '[]');\r\n    const entry = {\r\n      email: currentUser.email,\r\n      type,\r\n      date: new Date().toISOString(),\r\n      points: type === 'vote' ? 1 : 2\r\n    };\r\n    localStorage.setItem('points', JSON.stringify([...record, entry]));\r\n  };\r\n\r\n  // Agregar nueva acción (comentario)\r\n  const handleAddAction = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!actionText.trim()) return;\r\n\r\n    const newAction = {\r\n      id: Date.now().toString(),\r\n      text: actionText.trim(),\r\n      createdBy: currentUser?.email || 'desconocido',\r\n      voteCount: 0\r\n    };\r\n\r\n    const updated = {\r\n      ...retrospective,\r\n      actions: retrospective.actions ? [...retrospective.actions, newAction] : [newAction],\r\n      votes: retrospective.votes || {}\r\n    };\r\n\r\n    localStorage.setItem('retrospective', JSON.stringify(updated));\r\n    setRetrospective(updated);\r\n    setActionText('');\r\n    addPoint('comment');\r\n  };\r\n\r\n  // Votar o cambiar voto\r\n  const handleVote = (actionId: string) => {\r\n    if (!currentUser) return;\r\n\r\n    const prevVote = retrospective.votes?.[currentUser.email];\r\n\r\n    const updatedActions = retrospective.actions.map((a: any) => {\r\n      if (a.id === actionId) return { ...a, voteCount: a.voteCount + 1 };\r\n      if (a.id === prevVote) return { ...a, voteCount: Math.max(0, a.voteCount - 1) };\r\n      return a;\r\n    });\r\n\r\n    const updatedVotes = { ...retrospective.votes, [currentUser.email]: actionId };\r\n\r\n    const updated = { ...retrospective, actions: updatedActions, votes: updatedVotes };\r\n\r\n    localStorage.setItem('retrospective', JSON.stringify(updated));\r\n    setRetrospective(updated);\r\n    setHasVoted(true);\r\n    setUserVotedAction(actionId);\r\n    addPoint('vote');\r\n  };\r\n\r\n  // Preguntas guiadas por FSH\r\n  const questionsMapping: { [key: string]: string[] } = {\r\n    FSH1: ['Pregunta 1 para FSH1', 'Pregunta 2 para FSH1'],\r\n    FSH2: ['Pregunta 1 para FSH2', 'Pregunta 2 para FSH2'],\r\n    FSH3: ['Pregunta 1 para FSH3', 'Pregunta 2 para FSH3']\r\n  };\r\n\r\n  if (!retrospective) return <div>No hay retrospectiva activa.</div>;\r\n\r\n  return (\r\n    <div style={{ padding: '1rem' }}>\r\n      <h2>Retrospectiva: {retrospective.title}</h2>\r\n      <p>{retrospective.description}</p>\r\n      {retrospective.fsh && (\r\n        <p>\r\n          FSH: <span style={{ color: 'blue' }}>{retrospective.fsh}</span>\r\n        </p>\r\n      )}\r\n\r\n      <hr />\r\n      <h3>Agregar Acción</h3>\r\n      <form onSubmit={handleAddAction}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Escribe tu acción\"\r\n          value={actionText}\r\n          onChange={e => setActionText(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Agregar Acción</button>\r\n      </form>\r\n\r\n      <hr />\r\n      <h3>Acciones Agregadas</h3>\r\n      {retrospective.actions?.length ? (\r\n        <ul style={{ listStyle: 'none', padding: 0 }}>\r\n          {retrospective.actions.map((action: any) => (\r\n            <li\r\n              key={action.id}\r\n              style={{ display: 'flex', alignItems: 'center', margin: '0.5rem 0' }}\r\n            >\r\n              <img\r\n                src={getAvatar(action.createdBy)}\r\n                alt=\"avatar\"\r\n                style={{ width: '32px', height: '32px', borderRadius: '50%', marginRight: '0.5rem' }}\r\n              />\r\n              <div style={{ flex: 1 }}>\r\n                <strong>{action.createdBy}</strong>: {action.text}\r\n              </div>\r\n              <div style={{ marginLeft: '1rem' }}>\r\n                {action.voteCount} votos\r\n                <button\r\n                  onClick={() => handleVote(action.id)}\r\n                  disabled={hasVoted}\r\n                  style={{ marginLeft: '0.5rem' }}\r\n                >\r\n                  {userVotedAction === action.id ? 'Has votado' : 'Votar'}\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No se han agregado acciones aún.</p>\r\n      )}\r\n\r\n      <hr />\r\n      <button onClick={() => setShowQuestions(!showQuestions)}>\r\n        {showQuestions ? 'Ocultar Preguntas' : 'Ver Preguntas'}\r\n      </button>\r\n      {showQuestions && retrospective.fsh && (\r\n        <div>\r\n          <h3>Preguntas para {retrospective.fsh}</h3>\r\n          <ul>\r\n            {questionsMapping[retrospective.fsh].map((q, i) => (\r\n              <li key={i}>{q}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}