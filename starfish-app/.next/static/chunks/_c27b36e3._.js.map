{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Nereida%20Ramos/Desktop/Ga-Starfish-2/starfish-app/src/app/leaderboard/page.tsx"],"sourcesContent":["// src/app/leaderboard/page.tsx\r\n'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { subDays, subMonths } from 'date-fns';\r\n\r\ninterface PointsEntry {\r\n  email: string;\r\n  type: string;\r\n  date: string;\r\n  points: number;\r\n}\r\n\r\nexport default function LeaderboardPage() {\r\n  const [entries, setEntries] = useState<PointsEntry[]>([]);\r\n  const [period, setPeriod] = useState<'all' | 'weekly' | 'monthly'>('all');\r\n  const [scores, setScores] = useState<{ email: string; total: number }[]>([]);\r\n\r\n  useEffect(() => {\r\n    const stored = JSON.parse(localStorage.getItem('points') || '[]');\r\n    setEntries(stored);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const now = new Date();\r\n    let filtered = entries;\r\n\r\n    if (period === 'weekly') {\r\n      const cutoff = subDays(now, 7);\r\n      filtered = entries.filter(entry => new Date(entry.date) >= cutoff);\r\n    } else if (period === 'monthly') {\r\n      const cutoff = subMonths(now, 1);\r\n      filtered = entries.filter(entry => new Date(entry.date) >= cutoff);\r\n    }\r\n\r\n    const summary: Record<string, number> = {};\r\n\r\n    filtered.forEach(entry => {\r\n      summary[entry.email] = (summary[entry.email] || 0) + entry.points;\r\n    });\r\n\r\n    const sortedScores = Object.entries(summary)\r\n      .map(([email, total]) => ({ email, total }))\r\n      .sort((a, b) => b.total - a.total);\r\n\r\n    setScores(sortedScores);\r\n  }, [entries, period]);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Leaderboard</h1>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"period\" className=\"mr-2 font-medium\">Período:</label>\r\n        <select\r\n          id=\"period\"\r\n          value={period}\r\n          onChange={e => setPeriod(e.target.value as any)}\r\n          className=\"border px-2 py-1 rounded\"\r\n        >\r\n          <option value=\"all\">Total</option>\r\n          <option value=\"weekly\">Semanal</option>\r\n          <option value=\"monthly\">Mensual</option>\r\n        </select>\r\n      </div>\r\n\r\n      <table className=\"w-full border-collapse text-left\">\r\n        <thead>\r\n          <tr className=\"bg-gray-100\">\r\n            <th className=\"border-b p-2\">#</th>\r\n            <th className=\"border-b p-2\">Usuario</th>\r\n            <th className=\"border-b p-2\">Puntos</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {scores.length > 0 ? (\r\n            scores.map((entry, index) => (\r\n              <tr key={entry.email} className=\"hover:bg-gray-50\">\r\n                <td className=\"border-b p-2 text-center\">{index + 1}</td>\r\n                <td className=\"border-b p-2\">{entry.email}</td>\r\n                <td className=\"border-b p-2 text-center\">{entry.total}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={3} className=\"p-4 text-center text-gray-500\">No hay puntuaciones aún.</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAG/B;AACA;AAAA;;;AAHA;;;AAYe,SAAS;;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IACxD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgC;IACnE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsC,EAAE;IAE3E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM,SAAS,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,aAAa;YAC5D,WAAW;QACb;oCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM,MAAM,IAAI;YAChB,IAAI,WAAW;YAEf,IAAI,WAAW,UAAU;gBACvB,MAAM,SAAS,CAAA,GAAA,+LAAA,CAAA,UAAO,AAAD,EAAE,KAAK;gBAC5B,WAAW,QAAQ,MAAM;iDAAC,CAAA,QAAS,IAAI,KAAK,MAAM,IAAI,KAAK;;YAC7D,OAAO,IAAI,WAAW,WAAW;gBAC/B,MAAM,SAAS,CAAA,GAAA,mMAAA,CAAA,YAAS,AAAD,EAAE,KAAK;gBAC9B,WAAW,QAAQ,MAAM;iDAAC,CAAA,QAAS,IAAI,KAAK,MAAM,IAAI,KAAK;;YAC7D;YAEA,MAAM,UAAkC,CAAC;YAEzC,SAAS,OAAO;6CAAC,CAAA;oBACf,OAAO,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,MAAM,MAAM;gBACnE;;YAEA,MAAM,eAAe,OAAO,OAAO,CAAC,SACjC,GAAG;0DAAC,CAAC,CAAC,OAAO,MAAM,GAAK,CAAC;wBAAE;wBAAO;oBAAM,CAAC;yDACzC,IAAI;0DAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;;YAEnC,UAAU;QACZ;oCAAG;QAAC;QAAS;KAAO;IAEpB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;0BAExC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,SAAQ;wBAAS,WAAU;kCAAmB;;;;;;kCACrD,6LAAC;wBACC,IAAG;wBACH,OAAO;wBACP,UAAU,CAAA,IAAK,UAAU,EAAE,MAAM,CAAC,KAAK;wBACvC,WAAU;;0CAEV,6LAAC;gCAAO,OAAM;0CAAM;;;;;;0CACpB,6LAAC;gCAAO,OAAM;0CAAS;;;;;;0CACvB,6LAAC;gCAAO,OAAM;0CAAU;;;;;;;;;;;;;;;;;;0BAI5B,6LAAC;gBAAM,WAAU;;kCACf,6LAAC;kCACC,cAAA,6LAAC;4BAAG,WAAU;;8CACZ,6LAAC;oCAAG,WAAU;8CAAe;;;;;;8CAC7B,6LAAC;oCAAG,WAAU;8CAAe;;;;;;8CAC7B,6LAAC;oCAAG,WAAU;8CAAe;;;;;;;;;;;;;;;;;kCAGjC,6LAAC;kCACE,OAAO,MAAM,GAAG,IACf,OAAO,GAAG,CAAC,CAAC,OAAO,sBACjB,6LAAC;gCAAqB,WAAU;;kDAC9B,6LAAC;wCAAG,WAAU;kDAA4B,QAAQ;;;;;;kDAClD,6LAAC;wCAAG,WAAU;kDAAgB,MAAM,KAAK;;;;;;kDACzC,6LAAC;wCAAG,WAAU;kDAA4B,MAAM,KAAK;;;;;;;+BAH9C,MAAM,KAAK;;;;sDAOtB,6LAAC;sCACC,cAAA,6LAAC;gCAAG,SAAS;gCAAG,WAAU;0CAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOxE;GA/EwB;KAAA","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Nereida%20Ramos/Desktop/Ga-Starfish-2/starfish-app/node_modules/date-fns/esm/_lib/toInteger/index.js"],"sourcesContent":["export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}"],"names":[],"mappings":";;;AAAe,SAAS,UAAU,WAAW;IAC3C,IAAI,gBAAgB,QAAQ,gBAAgB,QAAQ,gBAAgB,OAAO;QACzE,OAAO;IACT;IACA,IAAI,SAAS,OAAO;IACpB,IAAI,MAAM,SAAS;QACjB,OAAO;IACT;IACA,OAAO,SAAS,IAAI,KAAK,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC;AACrD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Nereida%20Ramos/Desktop/Ga-Starfish-2/starfish-app/node_modules/%40babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"names":[],"mappings":";;;AAAA,SAAS,QAAQ,CAAC;IAChB;IAEA,OAAO,UAAU,cAAc,OAAO,UAAU,YAAY,OAAO,OAAO,QAAQ,GAAG,SAAU,CAAC;QAC9F,OAAO,OAAO;IAChB,IAAI,SAAU,CAAC;QACb,OAAO,KAAK,cAAc,OAAO,UAAU,EAAE,WAAW,KAAK,UAAU,MAAM,OAAO,SAAS,GAAG,WAAW,OAAO;IACpH,GAAG,QAAQ;AACb","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Nereida%20Ramos/Desktop/Ga-Starfish-2/starfish-app/node_modules/date-fns/esm/_lib/requiredArgs/index.js"],"sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}"],"names":[],"mappings":";;;AAAe,SAAS,aAAa,QAAQ,EAAE,IAAI;IACjD,IAAI,KAAK,MAAM,GAAG,UAAU;QAC1B,MAAM,IAAI,UAAU,WAAW,cAAc,CAAC,WAAW,IAAI,MAAM,EAAE,IAAI,yBAAyB,KAAK,MAAM,GAAG;IAClH;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Nereida%20Ramos/Desktop/Ga-Starfish-2/starfish-app/node_modules/date-fns/esm/toDate/index.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AA+Be,SAAS,OAAO,QAAQ;IACrC,CAAA,GAAA,sKAAA,CAAA,UAAY,AAAD,EAAE,GAAG;IAChB,IAAI,SAAS,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;IAE5C,iBAAiB;IACjB,IAAI,oBAAoB,QAAQ,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,cAAc,YAAY,WAAW,iBAAiB;QAC5F,8EAA8E;QAC9E,OAAO,IAAI,KAAK,SAAS,OAAO;IAClC,OAAO,IAAI,OAAO,aAAa,YAAY,WAAW,mBAAmB;QACvE,OAAO,IAAI,KAAK;IAClB,OAAO;QACL,IAAI,CAAC,OAAO,aAAa,YAAY,WAAW,iBAAiB,KAAK,OAAO,YAAY,aAAa;YACpG,sCAAsC;YACtC,QAAQ,IAAI,CAAC;YACb,sCAAsC;YACtC,QAAQ,IAAI,CAAC,IAAI,QAAQ,KAAK;QAChC;QACA,OAAO,IAAI,KAAK;IAClB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Nereida%20Ramos/Desktop/Ga-Starfish-2/starfish-app/node_modules/date-fns/esm/addDays/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAmBe,SAAS,QAAQ,SAAS,EAAE,WAAW;IACpD,CAAA,GAAA,sKAAA,CAAA,UAAY,AAAD,EAAE,GAAG;IAChB,IAAI,OAAO,CAAA,GAAA,wJAAA,CAAA,UAAM,AAAD,EAAE;IAClB,IAAI,SAAS,CAAA,GAAA,mKAAA,CAAA,UAAS,AAAD,EAAE;IACvB,IAAI,MAAM,SAAS;QACjB,OAAO,IAAI,KAAK;IAClB;IACA,IAAI,CAAC,QAAQ;QACX,yEAAyE;QACzE,OAAO;IACT;IACA,KAAK,OAAO,CAAC,KAAK,OAAO,KAAK;IAC9B,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Nereida%20Ramos/Desktop/Ga-Starfish-2/starfish-app/node_modules/date-fns/esm/subDays/index.js"],"sourcesContent":["import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAmBe,SAAS,QAAQ,SAAS,EAAE,WAAW;IACpD,CAAA,GAAA,sKAAA,CAAA,UAAY,AAAD,EAAE,GAAG;IAChB,IAAI,SAAS,CAAA,GAAA,mKAAA,CAAA,UAAS,AAAD,EAAE;IACvB,OAAO,CAAA,GAAA,yJAAA,CAAA,UAAO,AAAD,EAAE,WAAW,CAAC;AAC7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Nereida%20Ramos/Desktop/Ga-Starfish-2/starfish-app/node_modules/date-fns/esm/addMonths/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAmBe,SAAS,UAAU,SAAS,EAAE,WAAW;IACtD,CAAA,GAAA,sKAAA,CAAA,UAAY,AAAD,EAAE,GAAG;IAChB,IAAI,OAAO,CAAA,GAAA,wJAAA,CAAA,UAAM,AAAD,EAAE;IAClB,IAAI,SAAS,CAAA,GAAA,mKAAA,CAAA,UAAS,AAAD,EAAE;IACvB,IAAI,MAAM,SAAS;QACjB,OAAO,IAAI,KAAK;IAClB;IACA,IAAI,CAAC,QAAQ;QACX,2EAA2E;QAC3E,OAAO;IACT;IACA,IAAI,aAAa,KAAK,OAAO;IAE7B,8EAA8E;IAC9E,6EAA6E;IAC7E,8EAA8E;IAC9E,2EAA2E;IAC3E,+EAA+E;IAC/E,2EAA2E;IAC3E,2EAA2E;IAC3E,SAAS;IACT,IAAI,oBAAoB,IAAI,KAAK,KAAK,OAAO;IAC7C,kBAAkB,QAAQ,CAAC,KAAK,QAAQ,KAAK,SAAS,GAAG;IACzD,IAAI,cAAc,kBAAkB,OAAO;IAC3C,IAAI,cAAc,aAAa;QAC7B,0EAA0E;QAC1E,kBAAkB;QAClB,OAAO;IACT,OAAO;QACL,4EAA4E;QAC5E,yEAAyE;QACzE,4EAA4E;QAC5E,2EAA2E;QAC3E,0EAA0E;QAC1E,wEAAwE;QACxE,8CAA8C;QAC9C,KAAK,WAAW,CAAC,kBAAkB,WAAW,IAAI,kBAAkB,QAAQ,IAAI;QAChF,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Nereida%20Ramos/Desktop/Ga-Starfish-2/starfish-app/node_modules/date-fns/esm/subMonths/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAmBe,SAAS,UAAU,SAAS,EAAE,WAAW;IACtD,CAAA,GAAA,sKAAA,CAAA,UAAY,AAAD,EAAE,GAAG;IAChB,IAAI,SAAS,CAAA,GAAA,mKAAA,CAAA,UAAS,AAAD,EAAE;IACvB,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAS,AAAD,EAAE,WAAW,CAAC;AAC/B","ignoreList":[0],"debugId":null}}]
}