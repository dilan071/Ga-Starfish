{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/members/Members.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actions\": \"Members-module__j-EtRa__actions\",\n  \"button\": \"Members-module__j-EtRa__button\",\n  \"container\": \"Members-module__j-EtRa__container\",\n  \"deleteBtn\": \"Members-module__j-EtRa__deleteBtn\",\n  \"groupCreator\": \"Members-module__j-EtRa__groupCreator\",\n  \"header\": \"Members-module__j-EtRa__header\",\n  \"input\": \"Members-module__j-EtRa__input\",\n  \"logoContainer\": \"Members-module__j-EtRa__logoContainer\",\n  \"logoImage\": \"Members-module__j-EtRa__logoImage\",\n  \"menuButton\": \"Members-module__j-EtRa__menuButton\",\n  \"menuWrapper\": \"Members-module__j-EtRa__menuWrapper\",\n  \"pageTitle\": \"Members-module__j-EtRa__pageTitle\",\n  \"projectName\": \"Members-module__j-EtRa__projectName\",\n  \"select\": \"Members-module__j-EtRa__select\",\n  \"selectBtn\": \"Members-module__j-EtRa__selectBtn\",\n  \"selectedTable\": \"Members-module__j-EtRa__selectedTable\",\n  \"selectedUsers\": \"Members-module__j-EtRa__selectedUsers\",\n  \"userCard\": \"Members-module__j-EtRa__userCard\",\n  \"userInfo\": \"Members-module__j-EtRa__userInfo\",\n  \"userListContainer\": \"Members-module__j-EtRa__userListContainer\",\n  \"usersList\": \"Members-module__j-EtRa__usersList\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Nereida%20Ramos/Desktop/Ga-Starfish-2/starfish-app/src/app/members/page.tsx"],"sourcesContent":["'use client';\r\nimport { useState, useEffect, JSX, Children } from 'react';\r\nimport styles from './Members.module.css';\r\nimport SidebarToggle from '../SidebarToggle';\r\nimport Swal from 'sweetalert2';\r\n\r\n// Define a User type for state\r\ntype User = {\r\n  email: string;\r\n  role: string;\r\n  groupRole?: string;\r\n  assignedGroup?: string;\r\n};\r\n\r\nexport default function MembersPage(): JSX.Element {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [groupName, setGroupName] = useState<string>('');\r\n  const [selectedUsers, setSelectedUsers] = useState<User[]>([]);\r\n\r\n  // Carga inicial de usuarios\r\n  const loadUsers = (): void => {\r\n    const raw = localStorage.getItem('users') || '[]';\r\n    const all = JSON.parse(raw) as User[];\r\n    setUsers(all.filter(u => u.role !== 'admin'));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  // Asigna rol en grupo\r\n  const handleAssignGroupRole = (email: string, newRole: string): void => {\r\n    const raw = localStorage.getItem('users') || '[]';\r\n    const all = (JSON.parse(raw) as User[]).map(u =>\r\n      u.email === email ? { ...u, groupRole: newRole } : u\r\n    );\r\n    localStorage.setItem('users', JSON.stringify(all));\r\n    Swal.fire({\r\n      text: `Rol asignado a ${email}: ${newRole}.`,\r\n      icon: \"success\",\r\n      confirmButtonColor: '#ef4444',\r\n      iconColor: '#ef4444',\r\n      confirmButtonText: 'Cerrar',\r\n      scrollbarPadding: false \r\n    });\r\n    loadUsers();\r\n  };\r\n\r\n  // Agrega o quita usuario de la selección\r\n  const toggleUserSelection = (user: User): void => {\r\n    setSelectedUsers(prev =>\r\n      prev.some(u => u.email === user.email)\r\n        ? prev.filter(u => u.email !== user.email)\r\n        : [...prev, user]\r\n    );\r\n  };\r\n\r\n  // Elimina usuario completamente\r\n  const handleDeleteUser = (email: string): void => {\r\n    if (!confirm(`¿Eliminar usuario ${email} de forma permanente?`)) return;\r\n    const raw = localStorage.getItem('users') || '[]';\r\n    const all = (JSON.parse(raw) as User[]).filter(u => u.email !== email);\r\n    localStorage.setItem('users', JSON.stringify(all));\r\n    Swal.fire({\r\n      text: `Usuario ${email} eliminado correctamente.`,\r\n      icon: \"success\",\r\n      confirmButtonColor: '#ef4444',\r\n      iconColor: '#ef4444',\r\n      confirmButtonText: 'Cerrar',\r\n      scrollbarPadding: false \r\n    });\r\n    // También lo quitamos de la selección si estaba\r\n    setSelectedUsers(prev => prev.filter(u => u.email !== email));\r\n    loadUsers();\r\n  };\r\n\r\n  // Crea y asigna un nuevo grupo\r\n  const handleCreateGroup = (): void => {\r\n    if (!groupName.trim()) {\r\n      Swal.fire({\r\n        text: `Debes ingresar un nombre para el grupo.`,\r\n        icon: \"error\",\r\n        confirmButtonColor: '#ef4444',\r\n        iconColor: '#ef4444',\r\n        confirmButtonText: 'Cerrar',\r\n        scrollbarPadding: false \r\n      });\r\n      return;\r\n    }\r\n    const raw = localStorage.getItem('users') || '[]';\r\n    const all = JSON.parse(raw) as User[];\r\n    const groupMembers = all.filter(u => u.assignedGroup === groupName.trim());\r\n    // Validaciones...\r\n    if (groupMembers.length + selectedUsers.length > 5) {\r\n      Swal.fire({\r\n        text: `El grupo \"${groupName}\" no puede tener más de 5 integrantes.`,\r\n        icon: \"error\",\r\n        confirmButtonColor: '#ef4444',\r\n        iconColor: '#ef4444',\r\n        confirmButtonText: 'Cerrar',\r\n        scrollbarPadding: false \r\n      });\r\n      return;\r\n    }\r\n    const currentSM = groupMembers.filter(u => u.groupRole === 'scrum-master').length;\r\n    const newSM = selectedUsers.filter(u => u.groupRole === 'scrum-master').length;\r\n    if (currentSM + newSM > 1) {\r\n      Swal.fire({\r\n        text: \"Sólo se permite un Scrum Master por grupo.\",\r\n        icon: \"error\",\r\n        confirmButtonColor: '#ef4444',\r\n        iconColor: '#ef4444',\r\n        confirmButtonText: 'Cerrar',\r\n        scrollbarPadding: false \r\n      });\r\n      return;\r\n    }\r\n    const updated = all.map(u =>\r\n      selectedUsers.some(s => s.email === u.email)\r\n        ? { ...u, assignedGroup: groupName.trim() }\r\n        : u\r\n    );\r\n    localStorage.setItem('users', JSON.stringify(updated));\r\n         Swal.fire({\r\n            text: `Grupo \"${groupName}\" creado y asignado.`,\r\n            icon: \"success\",\r\n            confirmButtonColor: '#ef4444',\r\n            iconColor: '#ef4444',\r\n            confirmButtonText: 'Cerrar',\r\n            scrollbarPadding: false \r\n          });\r\n    setGroupName('');\r\n    setSelectedUsers([]);\r\n    loadUsers();\r\n  };\r\n\r\n  return (\r\n    <main className={styles.container}>\r\n      <header className={styles.header}>\r\n        <div className={styles.logoContainer}>\r\n          <img src=\"/img/starfish.png\" alt=\"Ga-Starfish Logo\" className={styles.logoImage} />\r\n          <span className={styles.projectName}>Ga-Starfish</span>\r\n        </div>\r\n\r\n        <h1 className={styles.pageTitle}>Panel de Administración</h1>\r\n\r\n        <div className={styles.menuWrapper}>\r\n          <SidebarToggle>­</SidebarToggle>\r\n        </div>\r\n      </header>\r\n    \r\n      <section className={styles.usersList}>\r\n        <h2>Usuarios Registrados</h2>\r\n        {users.length === 0 ? (\r\n          <span><h3>No hay usuarios registrados.</h3></span>\r\n        ) : (\r\n        users.map(u => (\r\n          <div key={u.email} className={styles.userCard}>\r\n            <div className={styles.userInfo}>\r\n              <strong>{u.email}</strong>\r\n              <span><strong>Rol:</strong> {u.groupRole || 'N/A'}</span>\r\n              <span><strong>Grupo:</strong> {u.assignedGroup || 'N/A'}</span>\r\n            </div>\r\n            <div className={styles.actions}>\r\n              <label>Asignar rol:</label>\r\n              <select\r\n                value={u.groupRole || ''}\r\n                onChange={e => handleAssignGroupRole(u.email, e.target.value)}\r\n                className={styles.select}\r\n              >\r\n                <option value=\"\">Ninguno</option>\r\n                <option value=\"Desarrollador\">Desarrollador</option>\r\n                <option value=\"Scrum Master\">Scrum Master</option>\r\n              </select>\r\n              <button\r\n                className={styles.selectBtn}\r\n                onClick={() => toggleUserSelection(u)}\r\n              >\r\n                {selectedUsers.some(s => s.email === u.email) ? 'Quitar' : 'Agregar'}\r\n              </button>\r\n              <button\r\n                className={styles.deleteBtn}\r\n                onClick={() => handleDeleteUser(u.email)}\r\n              >Eliminar</button>\r\n            </div>\r\n          </div>\r\n        ))\r\n        )}\r\n      </section>\r\n\r\n      <aside className={styles.groupCreator}>\r\n        <h2>Crear Grupo</h2>\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          placeholder=\"Nombre del grupo\"\r\n          value={groupName}\r\n          onChange={e => setGroupName(e.target.value)}\r\n        />\r\n        <button className={styles.button} onClick={handleCreateGroup}>\r\n          Crear y Asignar\r\n        </button>\r\n        <div className={styles.selectedUsers}>\r\n          <h3>Usuarios seleccionados:</h3>\r\n          {selectedUsers.length > 0 ? (\r\n            <table className={styles.selectedTable}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Usuario</th>\r\n                  <th>Rol</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {selectedUsers.map(u => (\r\n                  <tr key={u.email}>\r\n                    <td>{u.email}</td>\r\n                    <td>{u.groupRole || 'Sin rol'}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>Ninguno</p>\r\n          )}\r\n        </div>\r\n      </aside>\r\n    </main>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}